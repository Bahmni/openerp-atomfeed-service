name: Build and Publish
on:
  push:
    branches:
      - master
      - 'release-*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - "**.md"

jobs:
  docker-build-publish:
    name: Docker Build & Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"
      - name: Set env.ARTIFACT_VERSION
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - name: Run Unit Tests
        run: ./mvnw --no-transfer-progress clean test
      - name: Package
        run: ./mvnw --no-transfer-progress clean package -DskipTests
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: package/docker/Dockerfile
          push: true
          tags: bahmni/odoo-connect:${{env.ARTIFACT_VERSION}},bahmni/odoo-connect:latest
  trigger-workflow:
    name: Trigger workflow to deploy to docker env
    needs: 
      - docker-build-publish
    runs-on: ubuntu-latest
    env:
      ORG_NAME: Bahmni
      REPOSITORY_NAME: bahmni-docker
      EVENT_TYPE: odoo-connect-publish-event
    steps:
      - name: Create repository_dispatch
        run: |
          trigger_result=$(curl -s -o trigger_response.txt -w "%{http_code}" -X POST -H "Accept: application/vnd.github.v3+json" -H 'authorization: Bearer ${{ secrets.BAHMNI_PAT }}' https://api.github.com/repos/${ORG_NAME}/${REPOSITORY_NAME}/dispatches -d '{"event_type":"'"${EVENT_TYPE}"'"}')
          if [ $trigger_result == 204 ];then
            echo "Trigger to $ORG_NAME/$REPOSITORY_NAME Success"
          else
            echo "Trigger to $ORG_NAME/$REPOSITORY_NAME Failed"
            cat trigger_response.txt
            exit 1
          fi
